#!/usr/bin/python3

import pygame, os, sys

def genRobot(surf):
  print("Searching for robot...")
  for i in range(surf.get_width()):
    for j in range(surf.get_height()):
      if surf.get_at((i, j)) == (0x00, 0xff, 0x00):
        print("Found robot at (%i, %i)" % (i, surf.get_height() - j - 1))
        surf.set_at((i, j), (0xff, 0xff, 0xff))
        return [i, surf.get_height() - j - 1]
  raise ValueError("Can't find robot.")

def genTerrain(surf, top):
  d = 0
  out = []
  for i in range(surf.get_width()):
    col, layer = [], -1
    color, lastColor = tuple(), tuple()
    for j in range(surf.get_height()):
      color = surf.get_at((i, surf.get_height() - j - 1))
      if j == 0 and colorToType(color) == 'E': raise ValueError("Bottom of level cannot be left open.")
      else:
        if lastColor != color:
          layer += 1
          col.append([0, colorToType(color)])
        col[layer][0] += 1
      lastColor = color
    print("Column %i is %s." % (i, col))
    out.append(col)
    if len(col) > d: d = len(col)
  print("Depth of level is %i" % d)
  if d % 2 == top:
    print("Modifying depth to %s the top." % ("cap" if top else "uncap"))
    d -= 1
  
  for i in range(surf.get_width()):
    while len(out[i]) < d: out[i].append((0, colorToType((255, 255, 255))))
    while len(out[i]) > d: out[i].pop(-1)
    for j in range(d):
      if out[i][d - j - 1][0] != 0:
        if j % 2 == 1: out[i][d - j - 1] = (0, colorToType((255, 255, 255)))
        break;
  return out

def colorToType(color):
  if color == (0, 0, 0): return 'S'
  if color == (255, 0, 0): return 'L'
  if color == (255, 255, 255): return 'E'



if __name__ == "__main__":
  os.chdir(sys.argv[1])
  
  pygame.init()
  
  t = pygame.image.load("template.png")
  
  out = genRobot(t)
  with open("robot.txt", "w") as f:
    f.write("%i %i" % tuple(out))
  
  out = genTerrain(t, input("Should the top of the level be capped with solid tiles? (y/n) ").lower().startswith("y"))
  with open("terrain.txt", "w") as f:
    f.write("%i\n%i\n" % (len(out), len(out[0])))
    for i in out:
      for j in i: f.write("%s%i " % (j[1], j[0]))
      f.write("\n")
  
  pygame.quit()